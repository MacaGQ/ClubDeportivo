<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>